{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609052797806_-198471238","id":"20201227-160637_691991430","dateCreated":"2020-12-27T16:06:37+0900","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3234","text":"%md\n\n## 1. API는 어디서 찾을까?\n***주요 함수***\n1) Dataset의 하위 모듈인 DataFrameStatFunctions(통계함수), DataFrameNaFunctions(null 데이터)\n2) Column관련 메서드","dateUpdated":"2020-12-27T16:08:57+0900","dateFinished":"2020-12-27T16:09:05+0900","dateStarted":"2020-12-27T16:08:57+0900","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1. API는 어디서 찾을까?</h2>\n<p><strong><em>주요 함수</em></strong><br/>1) Dataset의 하위 모듈인 DataFrameStatFunctions(통계함수), DataFrameNaFunctions(null 데이터)<br/>2) Column관련 메서드</p>\n</div>"}]}},{"text":"// DataFrame 생성\nval retail=spark.read.format(\"csv\")\n        .option(\"header\",\"true\")\n        .option(\"inferSchema\",\"true\")\n        .load(\"C:/HadoopEco/spark-2.4.7-bin-hadoop2.7/data/retail-data/by-day/2010-12-01.csv\")\n\nretail.printSchema()        \nretail.createOrReplaceTempView(\"retailTable\")","user":"anonymous","dateUpdated":"2020-12-27T16:17:30+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609052936982_778588983","id":"20201227-160856_1122015860","dateCreated":"2020-12-27T16:08:56+0900","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3310","dateFinished":"2020-12-27T16:13:59+0900","dateStarted":"2020-12-27T16:13:37+0900","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- InvoiceNo: string (nullable = true)\n |-- StockCode: string (nullable = true)\n |-- Description: string (nullable = true)\n |-- Quantity: integer (nullable = true)\n |-- InvoiceDate: timestamp (nullable = true)\n |-- UnitPrice: double (nullable = true)\n |-- CustomerID: double (nullable = true)\n |-- Country: string (nullable = true)\n\r\nretail: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609053216670_2101842914","id":"20201227-161336_2034570049","dateCreated":"2020-12-27T16:13:36+0900","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3415","text":"%md\n## 2. 스파크에서 데이터 타입으로 변환하기\nlit함수를 사용하여 다른 언어의 데이터 타입을 스파크 데이터 타입에 맞게 변환","dateUpdated":"2020-12-27T16:19:05+0900","dateFinished":"2020-12-27T16:19:05+0900","dateStarted":"2020-12-27T16:19:05+0900","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>2. 스파크에서 데이터 타입으로 변환하기</h2>\n<p>lit함수를 사용하여 다른 언어의 데이터 타입을 스파크 데이터 타입에 맞게 변환</p>\n</div>"}]}},{"text":"import org.apache.spark.sql.functions.lit\n\nretail.select(lit(5),lit(\"five\"),lit(5.0))","user":"anonymous","dateUpdated":"2020-12-27T16:19:54+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609053529262_255239083","id":"20201227-161849_1396451562","dateCreated":"2020-12-27T16:18:49+0900","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3520","dateFinished":"2020-12-27T16:19:55+0900","dateStarted":"2020-12-27T16:19:54+0900","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.lit\r\nres4: org.apache.spark.sql.DataFrame = [5: int, five: string ... 1 more field]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609053590112_-104568136","id":"20201227-161950_1810405576","dateCreated":"2020-12-27T16:19:50+0900","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3642","text":"%md \n## 3. 불리언 데이터 타입","dateUpdated":"2020-12-27T16:21:03+0900","dateFinished":"2020-12-27T16:21:03+0900","dateStarted":"2020-12-27T16:21:03+0900","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>3. 불리언 데이터 타입</h2>\n</div>"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609053620289_66271409","id":"20201227-162020_119534137","dateCreated":"2020-12-27T16:20:20+0900","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3763","text":"import org.apache.spark.sql.functions.col\n/*\nand나 or을 사용해서 불리언 표현식을 여러 부분에 지정 가능.\n불리언 표현식을 사용하는 경우 항상 모든 표현식을 adn 메서드로 묶어 차례대로 필터 적용.\nspark 내부적으로 and 구문을 필터 사이에 추가하여 모든 필터를 하나의 문장으로 변환한 다음 동시에 모든 필터를 처리.\n반면,or구문을 사용할 때는 반드시 동일한 구문에 조건을 정의해야 한다.\n*/\n\n// 필터 생성\nval priceFilter=col(\"UnitPrice\")>600\nval descripFilter=col(\"Description\").contains(\"POSTAGE\")\n\n// 필터 적용\nretail.where(col(\"StockCode\").isin(\"DOT\"))\n    .where(priceFilter.or(descripFilter))\n    .show(5)","dateUpdated":"2020-12-27T16:28:34+0900","dateFinished":"2020-12-27T16:27:44+0900","dateStarted":"2020-12-27T16:27:43+0900","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+--------------+--------+-------------------+---------+----------+--------------+\n|InvoiceNo|StockCode|   Description|Quantity|        InvoiceDate|UnitPrice|CustomerID|       Country|\n+---------+---------+--------------+--------+-------------------+---------+----------+--------------+\n|   536544|      DOT|DOTCOM POSTAGE|       1|2010-12-01 14:32:00|   569.77|      null|United Kingdom|\n|   536592|      DOT|DOTCOM POSTAGE|       1|2010-12-01 17:06:00|   607.49|      null|United Kingdom|\n+---------+---------+--------------+--------+-------------------+---------+----------+--------------+\n\r\nimport org.apache.spark.sql.functions.col\r\npriceFilter: org.apache.spark.sql.Column = (UnitPrice > 600)\r\ndescripFilter: org.apache.spark.sql.Column = contains(Description, POSTAGE)\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609053955029_-1146518617","id":"20201227-162555_264898104","dateCreated":"2020-12-27T16:25:55+0900","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3881","text":"import org.apache.spark.sql.functions.{expr,not,col}\nretail.withColumn(\"isExpensive\",not(col(\"UnitPrice\").leq(250)))\n        .filter(\"isExpensive\")\n        .select(\"Description\",\"UnitPrice\")\n        .show(5)","dateUpdated":"2020-12-27T16:30:21+0900","dateFinished":"2020-12-27T16:30:22+0900","dateStarted":"2020-12-27T16:30:21+0900","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+---------+\n|   Description|UnitPrice|\n+--------------+---------+\n|DOTCOM POSTAGE|   569.77|\n|DOTCOM POSTAGE|   607.49|\n+--------------+---------+\n\r\nimport org.apache.spark.sql.functions.{expr, not, col}\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609053955765_-542700753","id":"20201227-162555_1348750594","dateCreated":"2020-12-27T16:25:55+0900","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3953"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609053956469_466269504","id":"20201227-162556_838659064","dateCreated":"2020-12-27T16:25:56+0900","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4025"}],"name":"part2_ch6_데이터 타입","id":"2FW67UJBQ","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}