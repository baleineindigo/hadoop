{"paragraphs":[{"text":"%md\n\n## 1. API는 어디서 찾을까?\n***주요 함수***\n1) Dataset의 하위 모듈인 DataFrameStatFunctions(통계함수), DataFrameNaFunctions(null 데이터)\n2) Column관련 메서드","user":"anonymous","dateUpdated":"2020-12-27T16:08:57+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1. API는 어디서 찾을까?</h2>\n<p><strong><em>주요 함수</em></strong><br/>1) Dataset의 하위 모듈인 DataFrameStatFunctions(통계함수), DataFrameNaFunctions(null 데이터)<br/>2) Column관련 메서드</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1609052797806_-198471238","id":"20201227-160637_691991430","dateCreated":"2020-12-27T16:06:37+0900","dateStarted":"2020-12-27T16:08:57+0900","dateFinished":"2020-12-27T16:09:05+0900","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7522"},{"text":"// DataFrame 생성\nval retail=spark.read.format(\"csv\")\n        .option(\"header\",\"true\")\n        .option(\"inferSchema\",\"true\")\n        .load(\"C:/HadoopEco/spark-2.4.7-bin-hadoop2.7/data/retail-data/by-day/2010-12-01.csv\")\n\nretail.printSchema()        \nretail.createOrReplaceTempView(\"retailTable\")","user":"anonymous","dateUpdated":"2020-12-27T18:07:47+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- InvoiceNo: string (nullable = true)\n |-- StockCode: string (nullable = true)\n |-- Description: string (nullable = true)\n |-- Quantity: integer (nullable = true)\n |-- InvoiceDate: timestamp (nullable = true)\n |-- UnitPrice: double (nullable = true)\n |-- CustomerID: double (nullable = true)\n |-- Country: string (nullable = true)\n\r\nretail: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\n"}]},"apps":[],"jobName":"paragraph_1609052936982_778588983","id":"20201227-160856_1122015860","dateCreated":"2020-12-27T16:08:56+0900","dateStarted":"2020-12-27T18:07:47+0900","dateFinished":"2020-12-27T18:08:07+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7523"},{"text":"%md\n## 2. 스파크에서 데이터 타입으로 변환하기\nlit함수를 사용하여 다른 언어의 데이터 타입을 스파크 데이터 타입에 맞게 변환","user":"anonymous","dateUpdated":"2020-12-27T16:19:05+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>2. 스파크에서 데이터 타입으로 변환하기</h2>\n<p>lit함수를 사용하여 다른 언어의 데이터 타입을 스파크 데이터 타입에 맞게 변환</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1609053216670_2101842914","id":"20201227-161336_2034570049","dateCreated":"2020-12-27T16:13:36+0900","dateStarted":"2020-12-27T16:19:05+0900","dateFinished":"2020-12-27T16:19:05+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7524"},{"text":"import org.apache.spark.sql.functions.lit\n\nretail.select(lit(5),lit(\"five\"),lit(5.0))","user":"anonymous","dateUpdated":"2020-12-27T16:19:54+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.lit\r\nres4: org.apache.spark.sql.DataFrame = [5: int, five: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1609053529262_255239083","id":"20201227-161849_1396451562","dateCreated":"2020-12-27T16:18:49+0900","dateStarted":"2020-12-27T16:19:54+0900","dateFinished":"2020-12-27T16:19:55+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7525"},{"text":"%md \n## 3. 불리언 데이터 타입","user":"anonymous","dateUpdated":"2020-12-27T16:21:03+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>3. 불리언 데이터 타입</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1609053590112_-104568136","id":"20201227-161950_1810405576","dateCreated":"2020-12-27T16:19:50+0900","dateStarted":"2020-12-27T16:21:03+0900","dateFinished":"2020-12-27T16:21:03+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7526"},{"text":"import org.apache.spark.sql.functions.col\n/*\nand나 or을 사용해서 불리언 표현식을 여러 부분에 지정 가능.\n불리언 표현식을 사용하는 경우 항상 모든 표현식을 adn 메서드로 묶어 차례대로 필터 적용.\nspark 내부적으로 and 구문을 필터 사이에 추가하여 모든 필터를 하나의 문장으로 변환한 다음 동시에 모든 필터를 처리.\n반면,or구문을 사용할 때는 반드시 동일한 구문에 조건을 정의해야 한다.\n*/\n\n// 필터 생성\nval priceFilter=col(\"UnitPrice\")>600\nval descripFilter=col(\"Description\").contains(\"POSTAGE\")\n\n// 필터 적용\nretail.where(col(\"StockCode\").isin(\"DOT\"))\n    .where(priceFilter.or(descripFilter))\n    .show(5)","user":"anonymous","dateUpdated":"2020-12-27T16:28:34+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+--------------+--------+-------------------+---------+----------+--------------+\n|InvoiceNo|StockCode|   Description|Quantity|        InvoiceDate|UnitPrice|CustomerID|       Country|\n+---------+---------+--------------+--------+-------------------+---------+----------+--------------+\n|   536544|      DOT|DOTCOM POSTAGE|       1|2010-12-01 14:32:00|   569.77|      null|United Kingdom|\n|   536592|      DOT|DOTCOM POSTAGE|       1|2010-12-01 17:06:00|   607.49|      null|United Kingdom|\n+---------+---------+--------------+--------+-------------------+---------+----------+--------------+\n\r\nimport org.apache.spark.sql.functions.col\r\npriceFilter: org.apache.spark.sql.Column = (UnitPrice > 600)\r\ndescripFilter: org.apache.spark.sql.Column = contains(Description, POSTAGE)\n"}]},"apps":[],"jobName":"paragraph_1609053620289_66271409","id":"20201227-162020_119534137","dateCreated":"2020-12-27T16:20:20+0900","dateStarted":"2020-12-27T16:27:43+0900","dateFinished":"2020-12-27T16:27:44+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7527"},{"text":"import org.apache.spark.sql.functions.{expr,not,col}\n// 새로운 컬럼 isExpensive가 250보다 작거나 같지 않고, isExpensive가 true인 \"Description\",\"UnitPrice\"열\nretail.withColumn(\"isExpensive\",not(col(\"UnitPrice\").leq(250)))\n        .filter(\"isExpensive\")\n        .select(\"Description\",\"UnitPrice\",\"isExpensive\")\n        .show(5)\n\n// 동일한 표현 \nretail.withColumn(\"isExpensive\",expr(\"NOT UnitPrice<=250\"))\n        .filter(\"isExpensive\")\n        .select(\"Description\",\"UnitPrice\")\n        .show(5)\n        \n// null값 데이터        \nretail.where(col(\"Description\").eqNullSafe(\"hello\")).show(3)","user":"anonymous","dateUpdated":"2020-12-27T18:19:51+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+---------+-----------+\n|   Description|UnitPrice|isExpensive|\n+--------------+---------+-----------+\n|DOTCOM POSTAGE|   569.77|       true|\n|DOTCOM POSTAGE|   607.49|       true|\n+--------------+---------+-----------+\n\r\n+--------------+---------+\n|   Description|UnitPrice|\n+--------------+---------+\n|DOTCOM POSTAGE|   569.77|\n|DOTCOM POSTAGE|   607.49|\n+--------------+---------+\n\r\n+---------+---------+-----------+--------+-----------+---------+----------+-------+\n|InvoiceNo|StockCode|Description|Quantity|InvoiceDate|UnitPrice|CustomerID|Country|\n+---------+---------+-----------+--------+-----------+---------+----------+-------+\n+---------+---------+-----------+--------+-----------+---------+----------+-------+\n\r\nimport org.apache.spark.sql.functions.{expr, not, col}\n"}]},"apps":[],"jobName":"paragraph_1609053955029_-1146518617","id":"20201227-162555_264898104","dateCreated":"2020-12-27T16:25:55+0900","dateStarted":"2020-12-27T18:19:17+0900","dateFinished":"2020-12-27T18:19:18+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7528"},{"text":"%md\n## 4.수치형 데이터 타입","user":"anonymous","dateUpdated":"2020-12-27T18:26:43+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>4.수치형 데이터 타입</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1609053955765_-542700753","id":"20201227-162555_1348750594","dateCreated":"2020-12-27T16:25:55+0900","dateStarted":"2020-12-27T18:26:43+0900","dateFinished":"2020-12-27T18:26:43+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7529"},{"text":"\n// pow : 수치형 함수. 표시된 지수만큼 컬럼의 값을 거듭제곱\nimport org.apache.spark.sql.functions.{expr,pow}\n\nval fabricatedQuantity=pow(col(\"Quantity\")*col(\"UnitPrice\"),2)+5\nretail.select(expr(\"CustomerId\"),fabricatedQuantity.alias(\"realQuantity\")).show(2)\n\n// 반올림\nimport org.apache.spark.sql.functions.{round,bround}\n\nretail.select(\n    col(\"CustomerId\"),\n    round(col(\"Quantity\")*col(\"UnitPrice\")+5,1).alias(\"realQuantity\")).show(2)\n","user":"anonymous","dateUpdated":"2020-12-27T19:13:23+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609053956469_466269504","id":"20201227-162556_838659064","dateCreated":"2020-12-27T16:25:56+0900","dateStarted":"2020-12-27T19:08:33+0900","dateFinished":"2020-12-27T19:08:33+0900","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:7530"},{"text":"// 상관관계 : 피어슨 상관계수\nimport org.apache.spark.sql.functions.{corr}\n\nretail.stat.corr(\"Quantity\",\"UnitPrice\")\nretail.select.(corr(\"Quantity\",\"UnitPrice\")).show(3)","user":"anonymous","dateUpdated":"2020-12-27T19:13:33+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609064003080_-776435968","id":"20201227-191323_28755100","dateCreated":"2020-12-27T19:13:23+0900","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:7531"},{"text":"// 요약 통계 함수 : describe\nretail.describe().show()\n\n// StatFunctions 패키지는 다양한 통계 함수 제공\n// 함수를 임포트하여 해당 컬럼에 적용하는 방식으로 직접 집계를 수행\nimport org.apache.spark.sql.functions.{count,mean,stddev_pop,min,max}\nval colName=\"UnitPrice\"\nval quantileProbs=Array(0.5)\nval relError=0.05\n\nretail.stat.approxQuantile(colName,quantileProbs,relError)\n","user":"anonymous","dateUpdated":"2020-12-27T19:15:23+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-----------------+------------------+--------------------+------------------+------------------+------------------+--------------+\n|summary|        InvoiceNo|         StockCode|         Description|          Quantity|         UnitPrice|        CustomerID|       Country|\n+-------+-----------------+------------------+--------------------+------------------+------------------+------------------+--------------+\n|  count|             3108|              3108|                3098|              3108|              3108|              1968|          3108|\n|   mean| 536516.684944841|27834.304044117645|                null| 8.627413127413128| 4.151946589446603|15661.388719512195|          null|\n| stddev|72.89447869788873|17407.897548583845|                null|26.371821677029203|15.638659854603892|1854.4496996893627|          null|\n|    min|           536365|             10002| 4 PURPLE FLOCK D...|               -24|               0.0|           12431.0|     Australia|\n|    max|          C536548|              POST|ZINC WILLIE WINKI...|               600|            607.49|           18229.0|United Kingdom|\n+-------+-----------------+------------------+--------------------+------------------+------------------+------------------+--------------+\n\r\n+------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n|StockCode_Quantity| -1|-10|-12| -2|-24| -3| -4| -5| -6| -7|  1| 10|100| 11| 12|120|128| 13| 14|144| 15| 16| 17| 18| 19|192|  2| 20|200| 21|216| 22| 23| 24| 25|252| 27| 28|288|  3| 30| 32| 33| 34| 36|384|  4| 40|432| 47| 48|480|  5| 50| 56|  6| 60|600| 64|  7| 70| 72|  8| 80|  9| 96|\n+------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n|             22578|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|             21327|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  2|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|             22064|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|             21080|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|\n|             22219|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  3|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|             21908|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|             22818|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|           15056BL|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|             72817|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|             22545|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n+------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\nonly showing top 10 rows\n\r\nimport org.apache.spark.sql.functions.{count, mean, stddev_pop, min, max}\r\ncolName: String = UnitPrice\r\nquantileProbs: Array[Double] = Array(0.5)\r\nrelError: Double = 0.05\n"}]},"apps":[],"jobName":"paragraph_1609060844532_1363757926","id":"20201227-182044_1836808189","dateCreated":"2020-12-27T18:20:44+0900","dateStarted":"2020-12-27T19:15:06+0900","dateFinished":"2020-12-27T19:15:12+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7532"},{"text":"// StatFunctions - 교차표\nretail.stat.crosstab(\"StockCode\",\"Quantity\").show(2)\nretail.stat.freqItems(Seq(\"StockCode\",\"Quantity\")).show(2)\n\n// monotonically_increasing_id : 모든 로우에 고유 ID 값 추가\nimport org.apache.spark.sql.functions.monotonically_increasing_id\n\nretail.select(monotonically_increasing_id()).show()","user":"anonymous","dateUpdated":"2020-12-27T19:34:59+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n|StockCode_Quantity| -1|-10|-12| -2|-24| -3| -4| -5| -6| -7|  1| 10|100| 11| 12|120|128| 13| 14|144| 15| 16| 17| 18| 19|192|  2| 20|200| 21|216| 22| 23| 24| 25|252| 27| 28|288|  3| 30| 32| 33| 34| 36|384|  4| 40|432| 47| 48|480|  5| 50| 56|  6| 60|600| 64|  7| 70| 72|  8| 80|  9| 96|\n+------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n|             22578|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|             21327|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  2|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n+------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\nonly showing top 2 rows\n\r\n+--------------------+--------------------+\n| StockCode_freqItems|  Quantity_freqItems|\n+--------------------+--------------------+\n|[90214E, 20728, 2...|[200, 128, 23, 32...|\n+--------------------+--------------------+\n\r\n+-----------------------------+\n|monotonically_increasing_id()|\n+-----------------------------+\n|                            0|\n|                            1|\n|                            2|\n|                            3|\n|                            4|\n|                            5|\n|                            6|\n|                            7|\n|                            8|\n|                            9|\n|                           10|\n|                           11|\n|                           12|\n|                           13|\n|                           14|\n|                           15|\n|                           16|\n|                           17|\n|                           18|\n|                           19|\n+-----------------------------+\nonly showing top 20 rows\n\r\nimport org.apache.spark.sql.functions.monotonically_increasing_id\n"}]},"apps":[],"jobName":"paragraph_1609064013361_-1776720602","id":"20201227-191333_2109648603","dateCreated":"2020-12-27T19:13:33+0900","dateStarted":"2020-12-27T19:34:59+0900","dateFinished":"2020-12-27T19:35:02+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7533"},{"text":"%md\n\n## 5. 문자열 데이터 타입 다루기","user":"anonymous","dateUpdated":"2020-12-27T19:36:18+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>5. 문자열 데이터 타입 다루기</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1609060845035_-1343270368","id":"20201227-182045_188636387","dateCreated":"2020-12-27T18:20:45+0900","dateStarted":"2020-12-27T19:36:18+0900","dateFinished":"2020-12-27T19:36:18+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7534"},{"text":"import org.apache.spark.sql.functions.{initcap}\nretail.select(initcap(col(\"Description\"))).show(2,false)","user":"anonymous","dateUpdated":"2020-12-27T19:37:02+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------------------+\n|initcap(Description)              |\n+----------------------------------+\n|White Hanging Heart T-light Holder|\n|White Metal Lantern               |\n+----------------------------------+\nonly showing top 2 rows\n\r\nimport org.apache.spark.sql.functions.initcap\n"}]},"apps":[],"jobName":"paragraph_1609060844857_1476578810","id":"20201227-182044_1542615278","dateCreated":"2020-12-27T18:20:44+0900","dateStarted":"2020-12-27T19:37:02+0900","dateFinished":"2020-12-27T19:37:03+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7535"},{"text":"// 대소문자 \nimport org.apache.spark.sql.functions.{lower,upper}\nretail.select(\n    col(\"Description\"),\n    lower(col(\"Description\")),\n    upper(col(\"Description\"))\n    ).show(3)","user":"anonymous","dateUpdated":"2020-12-27T19:38:43+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+--------------------+\n|         Description|  lower(Description)|  upper(Description)|\n+--------------------+--------------------+--------------------+\n|WHITE HANGING HEA...|white hanging hea...|WHITE HANGING HEA...|\n| WHITE METAL LANTERN| white metal lantern| WHITE METAL LANTERN|\n|CREAM CUPID HEART...|cream cupid heart...|CREAM CUPID HEART...|\n+--------------------+--------------------+--------------------+\nonly showing top 3 rows\n\r\nimport org.apache.spark.sql.functions.{lower, upper}\n"}]},"apps":[],"jobName":"paragraph_1609065328951_529345099","id":"20201227-193528_1563786317","dateCreated":"2020-12-27T19:35:28+0900","dateStarted":"2020-12-27T19:38:43+0900","dateFinished":"2020-12-27T19:38:44+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7536"},{"text":"// 공백 추가,제거\nimport org.apache.spark.sql.functions.{lit,ltrim,rtrim,rpad,lpad,trim}\n\nretail.select(\n    ltrim(lit(\"    hello    \")).alias(\"ltrim\"),\n    rtrim(lit(\"    hello    \")).alias(\"rtrim\"),\n    trim(lit(\"    hello    \")).alias(\"trim\"),\n    lpad(lit(\"hello\"),3,\"*\").alias(\"lp\"),\n    rpad(lit(\"hello\"),10,\"*\").alias(\"rp\")\n    ).show(4)\n    \n","user":"anonymous","dateUpdated":"2020-12-27T19:45:47+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+-----+---+----------+\n|    ltrim|    rtrim| trim| lp|        rp|\n+---------+---------+-----+---+----------+\n|hello    |    hello|hello|hel|hello*****|\n|hello    |    hello|hello|hel|hello*****|\n|hello    |    hello|hello|hel|hello*****|\n|hello    |    hello|hello|hel|hello*****|\n+---------+---------+-----+---+----------+\nonly showing top 4 rows\n\r\nimport org.apache.spark.sql.functions.{lit, ltrim, rtrim, rpad, lpad, trim}\n"}]},"apps":[],"jobName":"paragraph_1609065331244_1397285687","id":"20201227-193531_1102441357","dateCreated":"2020-12-27T19:35:31+0900","dateStarted":"2020-12-27T19:45:47+0900","dateFinished":"2020-12-27T19:45:48+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7537"},{"text":"%md\n#### 정규 표현식\n-----\n문자열의 존재 여부를 확인하거나 일치하는 모든 문자열을 치환할 때 사용.\n문자열에서 값 추출, 다른 값으로 치환하는 데 필요한 규칙 모음을 정의할 수 있다.","user":"anonymous","dateUpdated":"2020-12-27T19:55:38+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>정규 표현식</h4>\n<hr/>\n<p>문자열의 존재 여부를 확인하거나 일치하는 모든 문자열을 치환할 때 사용.<br/>문자열에서 값 추출, 다른 값으로 치환하는 데 필요한 규칙 모음을 정의할 수 있다.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1609066354296_1126626679","id":"20201227-195234_1219860123","dateCreated":"2020-12-27T19:52:34+0900","dateStarted":"2020-12-27T19:55:38+0900","dateFinished":"2020-12-27T19:55:38+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7538"},{"text":"// regexp_replace : 값 추출, 치환하는 메서드\nimport org.apache.spark.sql.functions.regexp_replace\n\nval simpleColors=Seq(\"black\",\"white\",\"red\",\"green\",\"blue\")\nval regexString=simpleColors.map(_.toUpperCase).mkString(\"/\")  // mkString : 인자로 받은 문자열로 나눔","user":"anonymous","dateUpdated":"2020-12-27T20:22:01+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.regexp_replace\r\nsimpleColors: Seq[String] = List(black, white, red, green, blue)\r\nregexString: String = BLACK/WHITE/RED/GREEN/BLUE\n"}]},"apps":[],"jobName":"paragraph_1609065331369_1309696813","id":"20201227-193531_390000517","dateCreated":"2020-12-27T19:35:31+0900","dateStarted":"2020-12-27T20:22:01+0900","dateFinished":"2020-12-27T20:22:02+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7539"},{"text":"// traslate : 주어진 문자를 다른 문자로 치환\n// 교체 문자열에서 색인된 문자에 해당하는 모든 문자를 치환\n// 아래 예제의 경우 L=1,E=3,F=4,T=7\n// 1337인 경우 L=1,E=3,T=7\nimport org.apache.spark.sql.functions.translate\nretail.select(translate(col(\"Description\"),\"LEFT\",\"1347\"),col(\"Description\")).show()","user":"anonymous","dateUpdated":"2020-12-27T20:21:14+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------------------+--------------------+\n|translate(Description, LEFT, 1347)|         Description|\n+----------------------------------+--------------------+\n|              WHI73 HANGING H3A...|WHITE HANGING HEA...|\n|               WHI73 M37A1 1AN73RN| WHITE METAL LANTERN|\n|              CR3AM CUPID H3AR7...|CREAM CUPID HEART...|\n|              KNI773D UNION 41A...|KNITTED UNION FLA...|\n|              R3D WOO11Y HO77I3...|RED WOOLLY HOTTIE...|\n|              S37 7 BABUSHKA N3...|SET 7 BABUSHKA NE...|\n|              G1ASS S7AR 4ROS73...|GLASS STAR FROSTE...|\n|              HAND WARM3R UNION...|HAND WARMER UNION...|\n|              HAND WARM3R R3D P...|HAND WARMER RED P...|\n|              ASSOR73D CO1OUR B...|ASSORTED COLOUR B...|\n|              POPPY'S P1AYHOUS3...|POPPY'S PLAYHOUSE...|\n|              POPPY'S P1AYHOUS3...|POPPY'S PLAYHOUSE...|\n|              4317CRA47 PRINC3S...|FELTCRAFT PRINCES...|\n|              IVORY KNI773D MUG...|IVORY KNITTED MUG...|\n|              BOX O4 6 ASSOR73D...|BOX OF 6 ASSORTED...|\n|              BOX O4 VIN7AG3 JI...|BOX OF VINTAGE JI...|\n|              BOX O4 VIN7AG3 A1...|BOX OF VINTAGE AL...|\n|              HOM3 BUI1DING B1O...|HOME BUILDING BLO...|\n|              1OV3 BUI1DING B1O...|LOVE BUILDING BLO...|\n|              R3CIP3 BOX WI7H M...|RECIPE BOX WITH M...|\n+----------------------------------+--------------------+\nonly showing top 20 rows\n\r\nimport org.apache.spark.sql.functions.translate\n"}]},"apps":[],"jobName":"paragraph_1609065331020_1145877569","id":"20201227-193531_653201126","dateCreated":"2020-12-27T19:35:31+0900","dateStarted":"2020-12-27T20:21:14+0900","dateFinished":"2020-12-27T20:21:15+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7540"},{"text":"import org.apache.spark.sql.functions.regexp_extract\n\n// 파이프 문자(|)는 정규 표현식에서 OR을 의미\nval regexString = simpleColors.map(_.toUpperCase).mkString(\"(\",\"|\",\")\")\n\n// regexString의 문자를 포함할 경우 문자열 추출\nretail.select(\n    regexp_extract(col(\"Description\"),regexString,1).alias(\"color_clean\"),\n    col(\"Description\")).show(10)\n","user":"anonymous","dateUpdated":"2020-12-27T20:22:07+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+--------------------+\n|color_clean|         Description|\n+-----------+--------------------+\n|      WHITE|WHITE HANGING HEA...|\n|      WHITE| WHITE METAL LANTERN|\n|           |CREAM CUPID HEART...|\n|           |KNITTED UNION FLA...|\n|        RED|RED WOOLLY HOTTIE...|\n|           |SET 7 BABUSHKA NE...|\n|           |GLASS STAR FROSTE...|\n|           |HAND WARMER UNION...|\n|        RED|HAND WARMER RED P...|\n|           |ASSORTED COLOUR B...|\n+-----------+--------------------+\nonly showing top 10 rows\n\r\nimport org.apache.spark.sql.functions.regexp_extract\r\nregexString: String = (BLACK|WHITE|RED|GREEN|BLUE)\n"}]},"apps":[],"jobName":"paragraph_1609065331998_-315952895","id":"20201227-193531_1633458734","dateCreated":"2020-12-27T19:35:31+0900","dateStarted":"2020-12-27T20:22:07+0900","dateFinished":"2020-12-27T20:22:08+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7541"},{"text":"// 단순 값의 존재 여부 확인\nval containsBlack=col(\"Description\").contains(\"BLACK\")\nval containsWhite=col(\"Description\").contains(\"WHITE\")\n\nretail.withColumn(\"hasSimpleColor\",containsBlack.or(containsWhite))\n        .where(\"hasSimpleColor\")\n        .select(\"Description\").show(3,false)","user":"anonymous","dateUpdated":"2020-12-27T20:26:55+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------------------+\n|Description                       |\n+----------------------------------+\n|WHITE HANGING HEART T-LIGHT HOLDER|\n|WHITE METAL LANTERN               |\n|RED WOOLLY HOTTIE WHITE HEART.    |\n+----------------------------------+\nonly showing top 3 rows\n\r\ncontainsBlack: org.apache.spark.sql.Column = contains(Description, BLACK)\r\ncontainsWhite: org.apache.spark.sql.Column = contains(Description, WHITE)\n"}]},"apps":[],"jobName":"paragraph_1609068132284_-771311677","id":"20201227-202212_523460846","dateCreated":"2020-12-27T20:22:12+0900","dateStarted":"2020-12-27T20:26:55+0900","dateFinished":"2020-12-27T20:26:57+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7542"},{"text":"/* varrgs : 값 목록을 인수로 변환하여 함수에 전달하는 스칼라 고유 기능.\n임의 길이의 배열을 효율적으로 다룰 수 있음\n*/\n\nval selectedColumns=simpleColors.map(color=>{\n    col(\"Description\").contains(color.toUpperCase).alias(s\"is_$color\")\n    }):+expr(\"*\")\n\nretail.select(selectedColumns:_*)\n        .where(col(\"is_white\").or(col(\"is_green\")))\n        .select(\"Description\").show(3,false)\n","user":"anonymous","dateUpdated":"2020-12-27T20:35:36+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------------------+\n|Description                       |\n+----------------------------------+\n|WHITE HANGING HEART T-LIGHT HOLDER|\n|WHITE METAL LANTERN               |\n|RED WOOLLY HOTTIE WHITE HEART.    |\n+----------------------------------+\nonly showing top 3 rows\n\r\nselectedColumns: Seq[org.apache.spark.sql.Column] = List(contains(Description, BLACK) AS `is_black`, contains(Description, WHITE) AS `is_white`, contains(Description, RED) AS `is_red`, contains(Description, GREEN) AS `is_green`, contains(Description, BLUE) AS `is_blue`, unresolvedstar())\n"}]},"apps":[],"jobName":"paragraph_1609065331799_-1285240117","id":"20201227-193531_222261186","dateCreated":"2020-12-27T19:35:31+0900","dateStarted":"2020-12-27T20:35:36+0900","dateFinished":"2020-12-27T20:35:38+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7543"},{"text":"%md\n\n## 6. 날짜와 타임스탬프 데이터 타입","user":"anonymous","dateUpdated":"2020-12-27T20:37:22+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>6. 날짜와 타임스탬프 데이터 타입</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1609068132931_729561579","id":"20201227-202212_890413500","dateCreated":"2020-12-27T20:22:12+0900","dateStarted":"2020-12-27T20:37:22+0900","dateFinished":"2020-12-27T20:37:22+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7544"},{"text":"// 오늘 날짜와 현재 타임 스탬프값\nimport org.apache.spark.sql.functions.{current_date,current_timestamp}\n\nval dateDF=spark.range(10)\n    .withColumn(\"Today\",current_date())\n    .withColumn(\"now\",current_timestamp())\n\ndateDF.createOrReplaceTempView(\"dateTable\")\ndateDF.show()","user":"anonymous","dateUpdated":"2020-12-27T20:42:52+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+----------+--------------------+\n| id|     Today|                 now|\n+---+----------+--------------------+\n|  0|2020-12-27|2020-12-27 20:42:...|\n|  1|2020-12-27|2020-12-27 20:42:...|\n|  2|2020-12-27|2020-12-27 20:42:...|\n|  3|2020-12-27|2020-12-27 20:42:...|\n|  4|2020-12-27|2020-12-27 20:42:...|\n|  5|2020-12-27|2020-12-27 20:42:...|\n|  6|2020-12-27|2020-12-27 20:42:...|\n|  7|2020-12-27|2020-12-27 20:42:...|\n|  8|2020-12-27|2020-12-27 20:42:...|\n|  9|2020-12-27|2020-12-27 20:42:...|\n+---+----------+--------------------+\n\r\nimport org.apache.spark.sql.functions.{current_date, current_timestamp}\r\ndateDF: org.apache.spark.sql.DataFrame = [id: bigint, Today: date ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1609068132731_-1528248129","id":"20201227-202212_1381834459","dateCreated":"2020-12-27T20:22:12+0900","dateStarted":"2020-12-27T20:42:52+0900","dateFinished":"2020-12-27T20:42:53+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7545"},{"text":"// 5일 전후의 날짜 구하기\nimport org.apache.spark.sql.functions.{date_add,date_sub}\n\ndateDF.select(date_sub(col(\"Today\"),5),date_add(col(\"Today\"),5)).show(1)","user":"anonymous","dateUpdated":"2020-12-27T20:44:46+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+------------------+\n|date_sub(Today, 5)|date_add(Today, 5)|\n+------------------+------------------+\n|        2020-12-22|        2021-01-01|\n+------------------+------------------+\nonly showing top 1 row\n\r\nimport org.apache.spark.sql.functions.{date_add, date_sub}\n"}]},"apps":[],"jobName":"paragraph_1609068133655_77293216","id":"20201227-202213_259088125","dateCreated":"2020-12-27T20:22:13+0900","dateStarted":"2020-12-27T20:44:46+0900","dateFinished":"2020-12-27T20:44:47+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7546"},{"text":"// datediff : 날짜 사이의 일 수를 반환\nimport org.apache.spark.sql.functions.{datediff,months_between,to_date}\n\n// to_date : 문자열을 날짜로 변환, 날짜 포맷도 지정\ndateDF.withColumn(\"week_ago\",date_sub(col(\"Today\"),7))\n        .select(datediff(col(\"week_ago\"),col(\"Today\"))).show(1)\n        \ndateDF.select(\n    to_date(lit(\"2016-01-01\")).alias(\"start\"),\n    to_date(lit(\"2017-05-22\")).alias(\"end\"))\n    .select(months_between(col(\"start\"),col(\"end\"))).show(1)\n","user":"anonymous","dateUpdated":"2020-12-27T21:04:10+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------------+\n|datediff(week_ago, Today)|\n+-------------------------+\n|                       -7|\n+-------------------------+\nonly showing top 1 row\n\r\n+--------------------------------+\n|months_between(start, end, true)|\n+--------------------------------+\n|                    -16.67741935|\n+--------------------------------+\nonly showing top 1 row\n\r\nimport org.apache.spark.sql.functions.{datediff, months_between, to_date}\n"}]},"apps":[],"jobName":"paragraph_1609068133496_1943850646","id":"20201227-202213_544654271","dateCreated":"2020-12-27T20:22:13+0900","dateStarted":"2020-12-27T21:04:10+0900","dateFinished":"2020-12-27T21:04:12+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7547"},{"text":"// 날짜 포맷 지정\nimport org.apache.spark.sql.functions.to_date\n\nval dateFormat=\"yyyy-mm-dd\"\nval cleanDateDF=spark.range(1).select(\n    to_date(lit(\"2017-12-11\"),dateFormat).alias(\"date1\"),\n    to_date(lit(\"2017-20-12\"),dateFormat).alias(\"date2\"))\n\ncleanDateDF.createOrReplaceTempView(\"dateTable2\")\ncleanDateDF.show()\n\n// to_timestamp\nimport org.apache.spark.sql.functions.to_timestamp\n\ncleanDateDF.select(to_timestamp(col(\"date1\"), dateFormat),to_timestamp(col(\"date2\"), dateFormat)).show()","user":"anonymous","dateUpdated":"2020-12-27T21:05:21+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+----------+\n|     date1|     date2|\n+----------+----------+\n|2017-01-11|2017-01-12|\n+----------+----------+\n\r\n+-----------------------------------+-----------------------------------+\n|to_timestamp(`date1`, 'yyyy-mm-dd')|to_timestamp(`date2`, 'yyyy-mm-dd')|\n+-----------------------------------+-----------------------------------+\n|                2017-01-11 00:00:00|                2017-01-12 00:00:00|\n+-----------------------------------+-----------------------------------+\n\r\nimport org.apache.spark.sql.functions.to_date\r\ndateFormat: String = yyyy-mm-dd\r\ncleanDateDF: org.apache.spark.sql.DataFrame = [date1: date, date2: date]\r\nimport org.apache.spark.sql.functions.to_timestamp\n"}]},"apps":[],"jobName":"paragraph_1609069846762_842265199","id":"20201227-205046_1441016388","dateCreated":"2020-12-27T20:50:46+0900","dateStarted":"2020-12-27T21:05:21+0900","dateFinished":"2020-12-27T21:05:24+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7548"},{"text":"// 스파크가 리터럴로 인식하는 문자열을 지정해 날짜를 비교\ncleanDateDF.filter(col(\"date2\") > \"'2017-12-12'\").show()","user":"anonymous","dateUpdated":"2020-12-27T21:07:41+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+----------+\n|     date1|     date2|\n+----------+----------+\n|2017-01-11|2017-01-12|\n+----------+----------+\n\r\n+-----+-----+\n|date1|date2|\n+-----+-----+\n+-----+-----+\n\r\n"}]},"apps":[],"jobName":"paragraph_1609070093503_1165276668","id":"20201227-205453_1493106846","dateCreated":"2020-12-27T20:54:53+0900","dateStarted":"2020-12-27T21:07:04+0900","dateFinished":"2020-12-27T21:07:06+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7549"},{"text":"%md\n## 7. null 값 다루기\n1) coalesce\n2) ifnull,nullif,nvl,nvl2\n3) frop\n4) fill\n5) replace\n","user":"anonymous","dateUpdated":"2020-12-27T21:09:31+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>7. null 값 다루기</h2>\n<p>1) coalesce<br/>2) ifnull,nullif,nvl,nvl2<br/>3) frop<br/>4) fill<br/>5) replace</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1609070093993_1406349419","id":"20201227-205453_347822542","dateCreated":"2020-12-27T20:54:53+0900","dateStarted":"2020-12-27T21:09:31+0900","dateFinished":"2020-12-27T21:09:31+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7550"},{"text":"// 1) coalesce : 인수로 지정한 여러 컬럼 중 null이 아닌 첫번 째 값 반환.\n// 모든 값이 null이 아닌 경우 첫번째 컬럼의 값을 반환\n\nimport org.apache.spark.sql.functions.coalesce\n\nretail.select(coalesce(col(\"Description\"),col(\"CustomerId\"))).show()","user":"anonymous","dateUpdated":"2020-12-27T21:11:42+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------------------------+\n|coalesce(Description, CustomerId)|\n+---------------------------------+\n|             WHITE HANGING HEA...|\n|              WHITE METAL LANTERN|\n|             CREAM CUPID HEART...|\n|             KNITTED UNION FLA...|\n|             RED WOOLLY HOTTIE...|\n|             SET 7 BABUSHKA NE...|\n|             GLASS STAR FROSTE...|\n|             HAND WARMER UNION...|\n|             HAND WARMER RED P...|\n|             ASSORTED COLOUR B...|\n|             POPPY'S PLAYHOUSE...|\n|             POPPY'S PLAYHOUSE...|\n|             FELTCRAFT PRINCES...|\n|             IVORY KNITTED MUG...|\n|             BOX OF 6 ASSORTED...|\n|             BOX OF VINTAGE JI...|\n|             BOX OF VINTAGE AL...|\n|             HOME BUILDING BLO...|\n|             LOVE BUILDING BLO...|\n|             RECIPE BOX WITH M...|\n+---------------------------------+\nonly showing top 20 rows\n\r\nimport org.apache.spark.sql.functions.coalesce\n"}]},"apps":[],"jobName":"paragraph_1609070093908_-1322968844","id":"20201227-205453_1486352832","dateCreated":"2020-12-27T20:54:53+0900","dateStarted":"2020-12-27T21:11:42+0900","dateFinished":"2020-12-27T21:11:44+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7551"},{"text":"/* 2) ifnull,nullif,nvl,nvl2\n- ifnull : 두 값이 같으면 null을 반환\n- nvl : 첫번째 값이 null이면 두 번째 값 반환\n- nvl2 : 두 번째 값을 반환\n*/\n","user":"anonymous","dateUpdated":"2020-12-27T21:19:43+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1609071089388_1477408140","id":"20201227-211129_559020650","dateCreated":"2020-12-27T21:11:29+0900","dateStarted":"2020-12-27T21:19:43+0900","dateFinished":"2020-12-27T21:19:44+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7552"},{"text":"// 3) drop : null값을 가진 로우 제거\nretail.na.drop()\nretail.na.drop(\"any\")","user":"anonymous","dateUpdated":"2020-12-27T21:21:00+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res127: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\n"}]},"apps":[],"jobName":"paragraph_1609071129941_492819386","id":"20201227-211209_531998774","dateCreated":"2020-12-27T21:12:09+0900","dateStarted":"2020-12-27T21:20:18+0900","dateFinished":"2020-12-27T21:20:19+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7553"},{"text":"// 4) fill : 하나 이상의 컬럼을 특정 값으로 채우기\nretail.na.fill(\"ALL NULL values become this string\")\n// 다수의 컬럼에 적용하고 싶다면 적용하고자 하는 컬럼명을 배열로 만들어 인수로 사용\nretail.na.fill(5,Seq(\"StockCode\",\"InvoiceNo\"))","user":"anonymous","dateUpdated":"2020-12-27T21:22:54+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res131: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\n"}]},"apps":[],"jobName":"paragraph_1609071646474_-1736395270","id":"20201227-212046_579043488","dateCreated":"2020-12-27T21:20:46+0900","dateStarted":"2020-12-27T21:22:54+0900","dateFinished":"2020-12-27T21:22:55+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7554"},{"text":"// 5) replace : 변경하려는 값과 원래 값을 데이터 타입이 같아야 함\nretail.na.replace(\"Description\",Map(\"\" -> \"UNKNOWN\"))\n","user":"anonymous","dateUpdated":"2020-12-27T21:24:44+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res134: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\n"}]},"apps":[],"jobName":"paragraph_1609071129637_-1411047206","id":"20201227-211209_320172853","dateCreated":"2020-12-27T21:12:09+0900","dateStarted":"2020-12-27T21:24:45+0900","dateFinished":"2020-12-27T21:24:46+0900","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7555"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609071128226_-1065333869","id":"20201227-211208_1586367304","dateCreated":"2020-12-27T21:12:08+0900","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:7557"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609071128046_906285403","id":"20201227-211208_1755193853","dateCreated":"2020-12-27T21:12:08+0900","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:7558"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609071127685_-790838067","id":"20201227-211207_492020084","dateCreated":"2020-12-27T21:12:07+0900","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:7560"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1609071125229_-1005883232","id":"20201227-211205_262313823","dateCreated":"2020-12-27T21:12:05+0900","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:7561"}],"name":"part2_ch6_데이터 타입 다루기1","id":"2FW67UJBQ","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}